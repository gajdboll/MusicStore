@model MusicStoreData.Models.Store.ProductType

@{
    ViewData["Title"] = "Show Product";
    Layout = "~/Views/Shared/_Layout.cshtml";

    bool isOutOfStock = Model.Products != null && Model.Products.Sum(product => product.Quantity) <= 0;

    bool isOnSale = Model.OnSale;  // Assuming Model has an OnSale property
}
<header class="section-header text-center">
    <h1>Product</h1>
</header>
<!--Bread -->
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item">
            <a asp-controller="Home" asp-action="ShowProductCategories" asp-route-id="@ViewData["CategoryId"]">
                Product Category
            </a>
        </li>
        <li class="breadcrumb-item">
            <a asp-controller="Home" asp-action="ShowProductSubCategories" asp-route-id="@ViewData["SubCategoryId"]">
                Product Sub-Category
            </a>
        </li>
        <li class="breadcrumb-item">
            <a asp-controller="Home" asp-action="ShowProductsFromSubCategory" asp-route-id="@ViewData["SubCategoryId"]">
                Product Types
            </a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">Product</li>
    </ol>
</nav>

<div class="back-button-container">
    <a asp-controller="Home" asp-action="ShowProductsFromSubCategory" asp-route-id="@ViewData["SubCategoryId"]" class="btn btn-primary">
        <i class="bi bi-skip-backward-fill"></i> Go Back
    </a>
</div>

<div class="product-template-detail">
    <div class="product-template__container page-width container" id="ProductSection-product-template" data-section-id="product-template" data-section-type="product" >
        <div id="center_column" class="center_column">
            <div class="row product-single">
                <!--Images -->
                <div class="product-single__photos col-xs-12 col-md-6">
                    <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
                        <div class="carousel-inner">
                            @foreach (var item in Model.ProductImages)
                            {

                                var productImageUrl = Model.ProductImages?.FirstOrDefault();
                                        if (productImageUrl != null)
                                        {
                                    <div class="carousel-item @(item == Model.ProductImages.First() ? "active" : "")">
                                        <img src="@item.ImageUrl" class="d-block w-100" alt="Product Image">
                                    </div>
                                        }
                                        else
                                        {
                                    <div class="carousel-item @(item == Model.ProductImages.First() ? "active" : "")">
                                        <img src="../.././png/subcategory/default.webp" class="d-block w-100" alt="Product Image">
                                    </div>
                                          
                                        }       
                            }
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                            <span class="bi bi-arrow-left-circle-fill" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                            <span class="bi bi-arrow-right-circle-fill" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>

                    <div class="mt-3 d-flex justify-content-center">
                        @for (int i = 0; i < Model.ProductImages.Count; i++)
                        {
                            var item = Model.ProductImages.ElementAt(i);
                            <img src="@item.ImageUrl" class="img-thumbnail mx-1" style="width: 100px; cursor: pointer;" data-bs-target="#productCarousel" data-bs-slide-to="@i" alt="Product Thumbnail">
                        }
                    </div>
                </div>

                <!-- Informacje o produkcie -->
                <div class="col-xs-12 col-md-6">
                    <div class="product-single__meta">

                        <!-- Sale Banner -->
                        @if (isOnSale)
                        {
                            <div class="badge bg-danger position-absolut" style="border: 2px solid  display: inline-block;">
                                SALE
                            </div>
                        }

                        <h4 class="fw-bolder">@Model.Manufacturer?.Name</h4>
                        <h2 itemprop="name" class="product-single__title">@Model.Name</h2>
                        <div itemprop="offers">
                            <p class="product-single__price">
                                @if (isOnSale)
                                {
                                    <span class="product-price__price product-price__price-product-template">
                                        <span itemprop="price" id="ProductPrice-product-template">
                                            <span class='money' style=" color: red;"> @((Model.Price / 2).ToString())€ </span>
                                        </span>
                                    </span>
                                }
                                else
                                {
                                    <span class="product-price__price product-price__price-product-template">
                                        <span itemprop="price" id="ProductPrice-product-template"><span class='money'>@Model.Price.ToString() €</span></span>
                                    </span>
                                }
                            </p>
                            <p class="mb-2"><b>Descriptions:</b></p>
                            <p>@Model.Descriptions</p>
                            <form asp-action="AddToBasket" asp-controller="Cart" method="post" class="d-inline">
                                <input name="ProductTypeId" hidden value="@Model.Id" />
                                <div class="proVariants clearfix">
                                    <div class="swatch clearfix" data-option-index="1">
                                        <div class="mb-2"><b>Availability</b></div>
                                        @{
                                            bool isInStock = Model != null && !isOutOfStock;
                                        }
                                        @if (isInStock)
                                        {
                                            <p itemprop="brand" class="product-single__vendor" style="background-color: green; color: white;margin-bottom: 15px padding: 2px 5px; border-radius: 5px; display: inline-block;">In Stock</p>
                                        }
                                        else
                                        {
                                            <p itemprop="brand" class="product-single__vendor" style="background-color: red; color: white; padding: 2px 5px; border-radius: 5px; display: inline-block;">Sold Out</p>
                                        }
                                    </div>

                                    <!-- Select color  -->
                                    <div class="swatch clearfix" data-option-index="1">
                                        @{
                                            var colors = Model.Products.Select(product => product.Color).Distinct();
                                        }
                                        <div class="container mt-3">
                                            <h5 class="mb-2">Choose a Service</h5>
                                            <div class="d-flex flex-wrap">
                                                @foreach (var item in colors)
                                                {
                                                    <div data-value="@item.Name" class="swatch-element color @item.Name" style="margin-right: 5px; margin-bottom: 5px;">
                                                        <input id="swatch-1-@item.Name" type="radio" name="ServiceId" value="@item.Id" required />
                                                        <label for="swatch-1-@item.Name" style="background-color: @item.Name; width: 30px; height: 30px; display: inline-block; border-radius: 50%; border: 1px solid #000; cursor: pointer;"></label>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!--quantity  -->
                                <div class="quantity_wanted_p">
                                    <label for="NumberOfProducts" class="quantity-selector"><b>Quantity</b></label>
                                    <input type="number" name="NumberOfProducts" value="1" min="1" style="width: 75px;">
                                </div>
                                <br>

                                <!-- Add to basket -->
                                <button type="submit" name="add" id="AddToCart" class="btn btn-warning mb-3" title="Add to Cart" @(isOutOfStock ? "disabled" : "")>
                                    <i class="fa fa-shopping-basket"></i>
                                    <span id="AddToCartText">Add to Cart</span>
                                </button>
                            </form>
                            <br>

                            <!-- Wishlist-->
                            <div class="wishlist">
                                <a asp-controller="Wishlist" asp-action="AddToWishlist" asp-route-productTypeId="@Model.Id" class="btn btn-secondary">
                                    <i class="zmdi zmdi-favorite-outline zmdi-hc-fw"></i>
                                    <span>Add to Wishlist</span>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Zakładki z dodatkowymi informacjami -->
            <div class="container mt-5">
                <!-- Tab navigation -->
                <ul class="nav nav-tabs">
                    <li class="nav-item">
                        <a class="nav-link active" data-bs-toggle="tab" href="#tech-info">Tech Info</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="tab" href="#faqs">FAQs</a>

                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="tab" href="#reviews">Review</a>
                    </li>
                </ul>

                <!-- Tab content -->
                <div class="tab-content">
                    <!-- Technical Information Tab -->
                    <div id="tech-info" class="tab-pane fade show active">
                        @await Component.InvokeAsync("TechInfoComponent", new { productTypeId = Model.Id })

                    </div>

                    <!-- FAQs Tab -->
                    <div id="faqs" class="tab-pane fade">
                        @await Component.InvokeAsync("FAQComponent", new { productTypeId = Model.Id })
                        <!-- FAQ content would go here -->
                    </div>

                    <!-- Reviews Tab -->
                    <div id="reviews" class="tab-pane fade">
                        @await Component.InvokeAsync("ReviewsComponent", new { productTypeId = Model.Id })

                        <!-- Review content would go here -->
                    </div>
                </div>
            </div>


            <!-- Similar products / recommended -->
            @await Component.InvokeAsync("RelatedProductsComponent")


            <script type="text/javascript">
                $(document).ready(function () {
                    $('#productlistrelated .slick_carousel').slick({
                        dots: true,
                        infinite: true,
                        autoplay: false,
                        slidesToShow: 4,
                        slidesToScroll: 4,
                        responsive: [
                            {
                                breakpoint: 1199,
                                settings: {
                                    slidesToShow: 3,
                                    slidesToScroll: 1,
                                    infinite: true,
                                    dots: true
                                }
                            },
                            {
                                breakpoint: 900,
                                settings: {
                                    slidesToShow: 2,
                                    slidesToScroll: 1
                                }
                            },
                            {
                                breakpoint: 600,
                                settings: {
                                    slidesToShow: 2,
                                    slidesToScroll: 1
                                }
                            },
                            {
                                breakpoint: 480,
                                settings: {
                                    slidesToShow: 1,
                                    slidesToScroll: 1
                                }
                            }
                        ]
                    });
                });
            </script>
             
        </div>
    </div>
</div>
